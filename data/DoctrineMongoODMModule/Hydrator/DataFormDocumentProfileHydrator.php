<?php

namespace DoctrineMongoODMModule\Hydrator;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class DataFormDocumentProfileHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="custom_id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['client_email'])) {
            $value = $data['client_email'];
            $return = (string) $value;
            $this->class->reflFields['client_email']->setValue($document, $return);
            $hydratedData['client_email'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['when_updated'])) {
            $value = $data['when_updated'];
            if ($value instanceof \MongoDate) { $return = new \DateTime(); $return->setTimestamp($value->sec); } elseif (is_numeric($value)) { $return = new \DateTime(); $return->setTimestamp($value); } elseif ($value instanceof \DateTime) { $return = $value; } else { $return = new \DateTime($value); }
            $this->class->reflFields['when_updated']->setValue($document, clone $return);
            $hydratedData['when_updated'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['first_name'])) {
            $value = $data['first_name'];
            $return = (string) $value;
            $this->class->reflFields['first_name']->setValue($document, $return);
            $hydratedData['first_name'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['middle_name'])) {
            $value = $data['middle_name'];
            $return = (string) $value;
            $this->class->reflFields['middle_name']->setValue($document, $return);
            $hydratedData['middle_name'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['last_name'])) {
            $value = $data['last_name'];
            $return = (string) $value;
            $this->class->reflFields['last_name']->setValue($document, $return);
            $hydratedData['last_name'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['gender'])) {
            $value = $data['gender'];
            $return = (bool) $value;
            $this->class->reflFields['gender']->setValue($document, $return);
            $hydratedData['gender'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['company'])) {
            $value = $data['company'];
            $return = (string) $value;
            $this->class->reflFields['company']->setValue($document, $return);
            $hydratedData['company'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['position'])) {
            $value = $data['position'];
            $return = (string) $value;
            $this->class->reflFields['position']->setValue($document, $return);
            $hydratedData['position'] = $return;
        }
        return $hydratedData;
    }
}